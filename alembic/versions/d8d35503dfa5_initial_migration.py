"""Initial migration

Revision ID: d8d35503dfa5
Revises: 
Create Date: 2025-01-23 17:34:34.263308

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'd8d35503dfa5'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('address_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('address_street', sa.String(length=45), nullable=False),
    sa.Column('address_suburb', sa.String(length=45), nullable=False),
    sa.Column('address_city', sa.String(length=45), nullable=False),
    sa.Column('address_state', sa.String(length=45), nullable=False),
    sa.Column('address_postal_code', sa.String(length=45), nullable=False),
    sa.Column('address_country', sa.String(length=45), nullable=False),
    sa.Column('address_type', sa.Enum('billing_address', 'postal_address'), nullable=False),
    sa.PrimaryKeyConstraint('address_id')
    )
    op.create_table('building_class',
    sa.Column('building_class_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('building_class_code', sa.String(length=2), nullable=False),
    sa.Column('building_class_description', sa.String(length=45), nullable=True),
    sa.PrimaryKeyConstraint('building_class_id')
    )
    op.create_table('contractor_type',
    sa.Column('contractor_type_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('contractor_type', sa.String(length=45), nullable=False),
    sa.Column('contractor_type_description', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('contractor_type_id')
    )
    op.create_table('contact',
    sa.Column('contact_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('postal_address_id', sa.Integer(), nullable=True),
    sa.Column('contact_first_name', sa.String(length=45), nullable=False),
    sa.Column('contact_last_name', sa.String(length=45), nullable=False),
    sa.Column('contact_phone', sa.String(length=45), nullable=True),
    sa.Column('contact_email', sa.String(length=45), nullable=True),
    sa.Column('contact_business_name', sa.String(length=45), nullable=True),
    sa.Column('contact_abn', sa.String(length=45), nullable=True),
    sa.Column('contact_acn', sa.String(length=45), nullable=True),
    sa.Column('contact_accounts_email', sa.String(length=45), nullable=True),
    sa.Column('contact_website', sa.String(length=45), nullable=True),
    sa.Column('contact_discipline', sa.String(length=45), nullable=True),
    sa.Column('contact_creation_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['address_id'], ['address.address_id'], ),
    sa.ForeignKeyConstraint(['postal_address_id'], ['address.address_id'], ),
    sa.PrimaryKeyConstraint('contact_id')
    )
    op.create_table('client',
    sa.Column('client_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('primary_contact_id', sa.Integer(), nullable=False),
    sa.Column('secondary_contact_id', sa.Integer(), nullable=True),
    sa.Column('client_creation_datetime', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['primary_contact_id'], ['contact.contact_id'], ),
    sa.ForeignKeyConstraint(['secondary_contact_id'], ['contact.contact_id'], ),
    sa.PrimaryKeyConstraint('client_id')
    )
    op.create_table('contractor',
    sa.Column('contractor_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.contact_id'], ),
    sa.PrimaryKeyConstraint('contractor_id')
    )
    op.create_table('staff',
    sa.Column('staff_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('staff_role', sa.Enum('secretary', 'director', 'building_designer', 'draftsperson', 'junior_draftsperson'), nullable=False),
    sa.Column('staff_employment_status', sa.Enum('full_time', 'part_time', 'casual', 'not_employed'), nullable=False),
    sa.Column('staff_hire_date', sa.DateTime(), nullable=False),
    sa.Column('staff_notes', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.contact_id'], ),
    sa.PrimaryKeyConstraint('staff_id')
    )
    op.create_table('project',
    sa.Column('project_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('project_status', sa.Enum('lead', 'job', 'completed', 'no_sale'), nullable=False),
    sa.Column('project_description', sa.Text(), nullable=True),
    sa.Column('project_initial_inquiry_date', sa.Date(), nullable=True),
    sa.Column('project_start_date', sa.Date(), nullable=True),
    sa.Column('project_end_date', sa.Date(), nullable=True),
    sa.Column('project_storeys', sa.Integer(), nullable=True),
    sa.Column('project_referral_source', sa.Enum('google', 'referral', 'repeat_client', 'jkc', 'smce', 'word_of_mouth', 'website'), nullable=True),
    sa.Column('project_payment_basis', sa.Enum('lump_sum', 'hourly_rate'), nullable=True),
    sa.Column('project_creation_datetime', sa.DateTime(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.address_id'], ),
    sa.ForeignKeyConstraint(['client_id'], ['client.client_id'], ),
    sa.PrimaryKeyConstraint('project_id')
    )
    op.create_table('budget',
    sa.Column('budget_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('budget_type', sa.Enum('asset', 'liability'), nullable=False),
    sa.Column('budget_status', sa.Enum('not_invoiced', 'invoiced', 'paid'), nullable=False),
    sa.Column('budget_description', sa.String(length=45), nullable=True),
    sa.Column('budget_estimate', sa.String(length=45), nullable=True),
    sa.Column('budget_actual', sa.String(length=45), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.PrimaryKeyConstraint('budget_id')
    )
    op.create_table('call_log',
    sa.Column('call_log_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('call_log_type', sa.Enum('lead', 'information_request'), nullable=False),
    sa.Column('call_log_status', sa.Enum('follow_up', 'resolved'), nullable=False),
    sa.Column('call_log_datetime', sa.DateTime(), nullable=True),
    sa.Column('call_log_description', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['client_id'], ['client.client_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.staff_id'], ),
    sa.PrimaryKeyConstraint('call_log_id')
    )
    op.create_table('note',
    sa.Column('note_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('note_type', sa.String(length=45), nullable=False),
    sa.Column('note_content', sa.Text(), nullable=False),
    sa.Column('note_creation_datetime', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.client_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.PrimaryKeyConstraint('note_id')
    )
    op.create_table('project_has_contractor',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('contractor_id', sa.Integer(), nullable=False),
    sa.Column('contractor_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contractor_id'], ['contractor.contractor_id'], ),
    sa.ForeignKeyConstraint(['contractor_type_id'], ['contractor_type.contractor_type_id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.PrimaryKeyConstraint('project_id', 'contractor_id')
    )
    op.create_table('project_is_building_class',
    sa.Column('building_class_building_class_id', sa.Integer(), nullable=False),
    sa.Column('project_project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['building_class_building_class_id'], ['building_class.building_class_id'], ),
    sa.ForeignKeyConstraint(['project_project_id'], ['project.project_id'], ),
    sa.PrimaryKeyConstraint('building_class_building_class_id', 'project_project_id')
    )
    op.create_table('staff_project',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.staff_id'], ),
    sa.PrimaryKeyConstraint('staff_id', 'project_id')
    )
    op.create_table('staff_time',
    sa.Column('staff_time_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('staff_time_description', sa.String(length=45), nullable=True),
    sa.Column('staff_time_hours', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.project_id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.staff_id'], ),
    sa.PrimaryKeyConstraint('staff_time_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('staff_time')
    op.drop_table('staff_project')
    op.drop_table('project_is_building_class')
    op.drop_table('project_has_contractor')
    op.drop_table('note')
    op.drop_table('call_log')
    op.drop_table('budget')
    op.drop_table('project')
    op.drop_table('staff')
    op.drop_table('contractor')
    op.drop_table('client')
    op.drop_table('contact')
    op.drop_table('contractor_type')
    op.drop_table('building_class')
    op.drop_table('address')
    # ### end Alembic commands ###
