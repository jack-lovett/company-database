"""Initial commit.

Revision ID: 518caf27061f
Revises: 
Create Date: 2025-02-20 16:52:37.001278

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel
import sqlmodel.sql.sqltypes


# revision identifiers, used by Alembic.
revision: str = '518caf27061f'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('address',
    sa.Column('street', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
    sa.Column('suburb', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
    sa.Column('city', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
    sa.Column('state', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
    sa.Column('postal_code', sqlmodel.sql.sqltypes.AutoString(length=4), nullable=False),
    sa.Column('country', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
    sa.Column('type', sa.Enum('billing_address', 'postal_address', 'shipping_address', 'office_address', name='addresstype'), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('buildingclass',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('code', sqlmodel.sql.sqltypes.AutoString(length=2), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contractor_type',
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('local_authority',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
    sa.Column('website', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('overlay',
    sa.Column('name', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('soil_class',
    sa.Column('abbreviation', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
    sa.Column('class', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('wind_class',
    sa.Column('class', sqlmodel.sql.sqltypes.AutoString(length=2), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contact',
    sa.Column('first_name', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
    sa.Column('last_name', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=False),
    sa.Column('phone', sqlmodel.sql.sqltypes.AutoString(length=20), nullable=True),
    sa.Column('email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('business_name', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('abn', sqlmodel.sql.sqltypes.AutoString(length=11), nullable=True),
    sa.Column('accounts_email', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('website', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('discipline', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('address_id', sa.Integer(), nullable=True),
    sa.Column('postal_address_id', sa.Integer(), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['postal_address_id'], ['address.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site',
    sa.Column('address_id', sa.Integer(), nullable=False),
    sa.Column('local_authority_id', sa.Integer(), nullable=False),
    sa.Column('wind_class_id', sa.Integer(), nullable=False),
    sa.Column('soil_class_id', sa.Integer(), nullable=False),
    sa.Column('lot_number', sa.Integer(), nullable=True),
    sa.Column('plan_number', sqlmodel.sql.sqltypes.AutoString(length=15), nullable=True),
    sa.Column('heritage_status', sa.Boolean(), nullable=True),
    sa.Column('zone', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('precinct', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('area', sqlmodel.sql.sqltypes.AutoString(length=45), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['address_id'], ['address.id'], ),
    sa.ForeignKeyConstraint(['local_authority_id'], ['local_authority.id'], ),
    sa.ForeignKeyConstraint(['soil_class_id'], ['soil_class.id'], ),
    sa.ForeignKeyConstraint(['wind_class_id'], ['wind_class.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('client',
    sa.Column('primary_contact_id', sa.Integer(), nullable=False),
    sa.Column('secondary_contact_id', sa.Integer(), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['primary_contact_id'], ['contact.id'], ),
    sa.ForeignKeyConstraint(['secondary_contact_id'], ['contact.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('contractor',
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('site_overlay',
    sa.Column('overlay_id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['overlay_id'], ['overlay.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ),
    sa.PrimaryKeyConstraint('overlay_id', 'site_id')
    )
    op.create_table('staff',
    sa.Column('contact_id', sa.Integer(), nullable=False),
    sa.Column('role', sa.Enum('secretary', 'director', 'building_designer', 'draftsperson', 'junior_draftsperson', name='staffrole'), nullable=False),
    sa.Column('employment_status', sa.Enum('full_time', 'part_time', 'casual', 'not_employed', name='employmentstatus'), nullable=False),
    sa.Column('hire_date', sa.Date(), nullable=False),
    sa.Column('notes', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contact_id'], ['contact.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project',
    sa.Column('number', sa.Integer(), nullable=False),
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('site_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('lead', 'job', 'completed', 'no_sale', name='projectstatus'), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('initial_inquiry_date', sa.Date(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=True),
    sa.Column('end_date', sa.Date(), nullable=True),
    sa.Column('storeys', sa.Integer(), nullable=True),
    sa.Column('referral_source', sa.Enum('google', 'referral', 'repeat_client', 'jkc', 'smce', 'word_of_mouth', 'website', name='referralsource'), nullable=True),
    sa.Column('payment_basis', sa.Enum('lump_sum', 'hourly_rate', name='paymentbasis'), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['site_id'], ['site.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('number')
    )
    op.create_table('budget',
    sa.Column('type', sa.Enum('asset', 'liability', name='budgettype'), nullable=False),
    sa.Column('status', sa.Enum('not_invoiced', 'invoiced', 'paid', 'partially_invoiced', name='budgetstatus'), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('estimate', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('actual', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('call_log',
    sa.Column('client_id', sa.Integer(), nullable=False),
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('type', sa.Enum('lead', 'information_request', name='calllogtype'), nullable=False),
    sa.Column('status', sa.Enum('follow_up', 'resolved', 'in_progress', name='calllogstatus'), nullable=False),
    sa.Column('datetime_', sa.DateTime(), nullable=False),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('note',
    sa.Column('type', sa.Enum('comment', 'reminder', 'follow_up', name='notetype'), nullable=False),
    sa.Column('content', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('client_id', sa.Integer(), nullable=True),
    sa.Column('creation_datetime', sa.DateTime(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['client_id'], ['client.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_has_contractor',
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.Column('contractor_id', sa.Integer(), nullable=False),
    sa.Column('contractor_type_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contractor_id'], ['contractor.id'], ),
    sa.ForeignKeyConstraint(['contractor_type_id'], ['contractor_type.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('project_id', 'contractor_id')
    )
    op.create_table('project_is_building_class',
    sa.Column('building_class_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['building_class_id'], ['buildingclass.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('building_class_id', 'project_id')
    )
    op.create_table('projectisbuildingclass',
    sa.Column('building_class_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['building_class_id'], ['buildingclass.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.PrimaryKeyConstraint('building_class_id', 'project_id')
    )
    op.create_table('staff_project',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('staff_id', 'project_id')
    )
    op.create_table('staff_time',
    sa.Column('staff_id', sa.Integer(), nullable=False),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('description', sqlmodel.sql.sqltypes.AutoString(length=255), nullable=True),
    sa.Column('hours', sa.Integer(), nullable=False),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['project_id'], ['project.id'], ),
    sa.ForeignKeyConstraint(['staff_id'], ['staff.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('staff_time')
    op.drop_table('staff_project')
    op.drop_table('projectisbuildingclass')
    op.drop_table('project_is_building_class')
    op.drop_table('project_has_contractor')
    op.drop_table('note')
    op.drop_table('call_log')
    op.drop_table('budget')
    op.drop_table('project')
    op.drop_table('staff')
    op.drop_table('site_overlay')
    op.drop_table('contractor')
    op.drop_table('client')
    op.drop_table('site')
    op.drop_table('contact')
    op.drop_table('wind_class')
    op.drop_table('soil_class')
    op.drop_table('overlay')
    op.drop_table('local_authority')
    op.drop_table('contractor_type')
    op.drop_table('buildingclass')
    op.drop_table('address')
    # ### end Alembic commands ###
